*********************************************************************************
* Title: A small simulation study to compare the performance of causal estimators
* Author: Matthew J. Smith
* Date: 18th December 2024
*********************************************************************************



* NOTE! 
* This code relies on updates to the ELTMLE command that include cross-validation. 
* Please ensure that you have the latest version of ELTMLE installed:

* Install GitHub for Stata
net install github, from("https://haghish.github.io/github/")

* Install eltmle command
github install migariane/eltmle 


*****	
* Change working directory
*****

cd "YOUR WORKING DIRECTORY"
clear

	
*****
* Preliminaries
*****

* Generate true value
	clear
	set obs 10000000
	set seed 777
	gen w1    = round(runiform(1, 5)) //Quintiles of Socioeconomic Deprivation
	gen w2    = rbinomial(1, 0.45) //Binary: probability age >65 = 0.45
	gen w3    = round(runiform(0, 1) + 0.75*(w2) + 0.8*(w1)) //Stage 
	recode w3 (5/6=1)       //Stage (TNM): categorical 4 levels
	gen w4    = round(runiform(0, 1) + 1.2*(w2) + 0.2*(w1)) //Comorbidites: categorical four levels
	gen A     = (rbinomial(1,invlogit(-3 -  0.5*(w4) + 1.5*(w2) + 0.75*(w3) + 0.25*(w1) + 0.8*(w2)*(w4)))) //Binary treatment
	gen Y1    = (invlogit(-3 + 1 + 0.25*(w4) + 0.75*(w3) + 0.8*(w2)*(w4) + 0.05*(w1))) // Potential outcome 1
	gen Y0    = (invlogit(-3 + 0 + 0.25*(w4) + 0.75*(w3) + 0.8*(w2)*(w4) + 0.05*(w1))) // Potential outcome 2
	gen psi   = Y1-Y0  // Simulated ATE
	gen Y     = A*(Y1) + (1 - A)*Y0 // Binary outcome (consistency)
	
	mean psi // True value = 0.1673416
	
	
*****
* Run the Simulations
*****

* Specify number of observations and reps
	local obs 1000
	local reps 1000
	
* Create file to hold estimates from the simulation
	capture postclose ests
	postfile ests int(repno) float(ATE SE Method) using simests11, replace
	
	* Start time of simulations
	scalar t1 = c(current_time)
	
	* Run the repetitions
	timer on 1
	qui {
		
		noi _dots 0, title("Simulation running...")
			
		forval rep = 1/`reps' {
			
			* Preliminaries
			clear
			set seed `rep' 
			set obs `obs'
			
			* Generate covariates
			gen w1    = round(runiform(1, 5)) //Quintiles of Socioeconomic Deprivation
			gen w2    = rbinomial(1, 0.45) //Binary: probability age >65 = 0.45
			gen w3    = round(runiform(0, 1) + 0.75*(w2) + 0.8*(w1)) //Stage 
			recode w3 (5/6=1)       //Stage (TNM): categorical 4 levels
			gen w4    = round(runiform(0, 1) + 1.2*(w2) + 0.2*(w1)) //Comorbidites: categorical four levels
			
			* Exposure
			gen A     = (rbinomial(1,invlogit(-3 -  0.5*(w4) + 1.5*(w2) + 0.75*(w3) + 0.25*(w1) + 0.8*(w2)*(w4)))) //Binary treatment
			
			* Outcome
			gen Y1    = (invlogit(-3 + 1 + 0.25*(w4) + 0.75*(w3) + 0.8*(w2)*(w4) + 0.05*(w1))) // Potential outcome 1
			gen Y0    = (invlogit(-3 + 0 + 0.25*(w4) + 0.75*(w3) + 0.8*(w2)*(w4) + 0.05*(w1))) // Potential outcome 2
			gen psi   = Y1-Y0  // Simulated ATE
			gen Y     = A*(Y1) + (1 - A)*Y0 // Binary outcome (consistency)
			
			
			
			*************
			* Run methods 
			*************
			
			
			* Regression adjustment
			teffects ra (Y i.w1 i.w2 i.w3 i.w4) (A)
			estimates store ra
			local ATE = r(table)[1,1]
			local SE = r(table)[2,1]
			local Method = 1
			* Store the estimates
			post ests (`rep') (`ATE') (`SE') (`Method')
			
			* IPTW
			teffects ipw (Y) (A i.w1 i.w2 i.w3 i.w4)
			estimates store ipw
			local ATE = r(table)[1,1]
			local SE = r(table)[2,1]
			local Method = 2
			* Store the estimates
			post ests (`rep') (`ATE') (`SE') (`Method')
			
			* IPTW-RA
			teffects ipwra (Y i.w1 i.w2 i.w3 i.w4) (A i.w1 i.w2 i.w3 i.w4)
			estimates store ipwra
			local ATE = r(table)[1,1]
			local SE = r(table)[2,1]
			local Method = 3
			* Store the estimates
			post ests (`rep') (`ATE') (`SE') (`Method')
			
			* AIPTW
			teffects aipw (Y i.w1 i.w2 i.w3 i.w4) (A i.w1 i.w2 i.w3 i.w4)
			estimates store aipw
			local ATE = r(table)[1,1]
			local SE = r(table)[2,1]
			local Method = 4
			* Store the estimates
			post ests (`rep') (`ATE') (`SE') (`Method')
			
			* TMLE
			eltmle Y A w1 w2 w3 w4, tmle elements
			local ATE = r(ATEtmle)
			local SE = r(ATE_SE_tmle)
			local Method = 5
			* Store the estimates
			post ests (`rep') (`ATE') (`SE') (`Method')
			
			* CVTMLE
			eltmle Y A w1 w2 w3 w4, cvtmleQg cvfolds(10) elements
			local ATE = r(ATEtmle)
			local SE = r(ATE_SE_tmle)
			local Method = 6
			* Store the estimates
			post ests (`rep') (`ATE') (`SE') (`Method')
			
			
		* Dot for completion of rep
		noi _dots `rep' 0
		
		}
	}
	timer off 1
	postclose ests
	
	* End time of simulations
	scalar t2 = c(current_time)
	
	* Computational time
	display (clock(t2, "hms") - clock(t1, "hms")) / 1000 " seconds"	
	display ((clock(t2, "hms") - clock(t1, "hms")) / 1000)/(60*60) " hours"	
	
	
	
	
*****
* Check results of simulations
*****

	* load estimates data
	use "simests.dta", clear
	count
		
	* Performance measures
	simsum ATE, true(.1673416) meth(Method) id(repno) se(SE)
	
	
	
*****
* Produce graphs
*****

* Set tab graphs
	set autotabgraphs on

* Create labels for Method variable
	gen methlab = Method
	lab def methlab 1 "RA" 2 "IPTW" 3 "IPTW-RA" 4 "AIPTW" 5 "TMLE" 6 "CVTMLE"
	lab val methlab methlab

* Box plots
	graph box ATE, over(methlab) yline(0.1673416)

* Relative bias
	capture drop relbias meanrelbias
	gen relbias = (abs(0.1673416 - ATE)/0.1673416)*100
	by Method, sort: egen meanrelbias = mean(relbias)
	
	twoway (scatter relbias methlab, msymbol(oh) mcolor(black)) ///
			(scatter meanrelbias methlab, mcolor(red) msize(medium)), ///
		xlabel(1 "RA" 2 "IPTW" 3 "IPTW-RA" 4 "AIPTW" 5 "TMLE" 6 "CVTMLE") ///
		legend(off) graphregion(margin(r+2)) ///
		ytitle("Relative bias of ATE (%)") xtitle("Method")


		
		
		
